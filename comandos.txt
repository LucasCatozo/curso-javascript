              = -> recebe
        
        window.alert ->aparece um alerta
        window.confirm ->fazer alguma pergunta
        window.prompt -> peruntar algo para resposta
        
        Identificadores :
        ðŸ”´ Podem comeÃ§ar com letra, $ ou _
        ðŸ”´ NÃ£o podem comeÃ§ar com nÃºmeros
        ðŸ”´ Ã‰ possÃ­vel usar letras ou nÃºmeros
        ðŸ”´ Ã‰ possÃ­vel usar acentos e sÃ­mbolos
        ðŸ”´ NÃ£o podem conter espaÃ§os
        ðŸ”´ NÃ£o podem ser palavras reservadas

        ConversÃ£o de numeros :

        Number.parseInt(n) - Inteiros
        Number.parseFloat(n) - Reais
        Number(n) - Detecta qual Ã© qual, serve para os dois

        ConversÃ£o de nÃºmero para string:

        s.tostring
        String(s)

      (PrecedÃªncia dos Operadores MatemÃ¡ticos (Ordem de execuÃ§Ã£o))

      ParÃªnteses ( )
      Usados para alterar a ordem natural das operaÃ§Ãµes.
      Sempre avaliados primeiro.

      ExponenciaÃ§Ã£o **
      PotenciaÃ§Ã£o.
      Exemplo: 2 ** 3 = 8.

      MultiplicaÃ§Ã£o *, DivisÃ£o / e MÃ³dulo %
      TÃªm a mesma precedÃªncia.
      SÃ£o resolvidos da esquerda para a direita.

      diÃ§Ã£o + e SubtraÃ§Ã£o -
      Menor precedÃªncia entre os operadores aritmÃ©ticos.

      (PrecedÃªncia dos Operadores de AtribuiÃ§Ã£o)

      ++ antes ou depois - soma um valor para uma variavel

      -- antes ou depois - subtrai um valor para uma variavel

      (PrecedÃªncia dos Operadores de RelaÃ§Ãµes)

      > - maior
      < - Menor
      >= -  maior ou igual
      <= - Menor ou igual
      == - Igual
      != - NÃ¡o igual
      === - IdÃªntico
      !== - Desigual restrito
      ! - NegaÃ§Ã£o
      && -- ConjunÃ§Ã£o
      || - DisjunÃ§Ã£o

      (PeecedÃªncia dos Operadores TernÃ¡rios)

      ? - O que acontece quando Ã© aprovado
      : - O que acontece quando Ã© reprovado
